{"ast":null,"code":"var _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/RegisterView.tsx\";\nimport React from \"react\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport { LineBreak, StyledColumnView, Wrapper } from \"../global-ui/ReusedUI\";\nimport { Formik } from \"Formik\";\nexport var RegisterView = function RegisterView(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, React.createElement(StyledColumnView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), React.createElement(LineBreak, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), React.createElement(Button, {\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  });\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/RegisterView.tsx"],"names":["React","Button","TextInput","LineBreak","StyledColumnView","Wrapper","Formik","RegisterView","navigation","route","email","values","console","log","handleChange","handleBlur","handleSubmit"],"mappings":";AACA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,OAAtC;AASA,SAASC,MAAT,QAAuB,QAAvB;AAKA,OAAO,IAAMC,YAAgD,GAAG,SAAnDA,YAAmD,OAG1D;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,KACI,QADJA,KACI;AAkBJ,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAZ;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG;AAAA,QAAGG,YAAH,SAAGA,YAAH;AAAA,QAAiBC,UAAjB,SAAiBA,UAAjB;AAAA,QAA6BC,YAA7B,SAA6BA,YAA7B;AAAA,QAA2CL,MAA3C,SAA2CA,MAA3C;AAAA,WACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,YAAY,EAAEG,YAAY,CAAC,OAAD,CAD5B;AAEE,MAAA,MAAM,EAAEC,UAAU,CAAC,OAAD,CAFpB;AAGE,MAAA,KAAK,EAAEJ,MAAM,CAACD,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADD;AAAA,GAHH,CADF;AAoBD,CAzCM","sourcesContent":["import { gql } from \"apollo-boost\";\nimport React, { useEffect } from \"react\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport { LineBreak, StyledColumnView, Wrapper } from \"../global-ui/ReusedUI\";\nimport { AuthNavProps } from \"../navigation/auth/AuthParamList\";\nimport {\n  useRegisterMutation,\n  RegisterInput,\n} from \"../generated/apolloComponents\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, RenderPromises } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"../graphql/user/mutations/register\";\nimport { Formik } from \"Formik\";\nimport { ValuesOfCorrectTypeRule } from \"graphql\";\n\ninterface RegisterViewProps {}\n\nexport const RegisterView: React.FC<AuthNavProps<\"Register\">> = ({\n  navigation,\n  route,\n}) => {\n  // register mutation\n  // const [registerUser, { loading, error }] = useRegisterMutation();\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error :(</p>;\n\n  // async function onSubmit(formData: RegisterInput) {\n  //   const res = await registerUser({\n  //     variables: {\n  //       data: {\n  //         username: formData.username,\n  //         password: formData.password,\n  //         email: formData.email,\n  //       },\n  //     },\n  //   });\n  //   return res;\n  // }\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      onSubmit={(values) => console.log(values)}>\n      {({ handleChange, handleBlur, handleSubmit, values }) => (\n        <Wrapper>\n          <StyledColumnView>\n            <TextInput\n              onChangeText={handleChange(\"email\")}\n              onBlur={handleBlur(\"email\")}\n              value={values.email}\n            />\n          </StyledColumnView>\n          <LineBreak />\n\n          <Button onPress={handleSubmit as any}>Submit</Button>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}