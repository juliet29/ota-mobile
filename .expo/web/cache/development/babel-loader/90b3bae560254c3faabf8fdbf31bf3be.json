{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/InputField.tsx\";\nimport { useField, ErrorMessage } from \"formik\";\nimport React from \"react\";\nimport { TextInput, HelperText } from \"react-native-paper\";\nimport * as yup from \"yup\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var MyTextField = function MyTextField(_ref) {\n  var errName = _ref.errName,\n      label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"errName\", \"label\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, _extends({\n    label: label\n  }, field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  })), React.createElement(HelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(ErrorMessage, _extends({}, field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }))));\n};\nexport var validationSchema = yup.object({\n  username: yup.string().required().min(5),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(5)\n});","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/InputField.tsx"],"names":["useField","ErrorMessage","React","TextInput","HelperText","yup","MyTextField","errName","label","props","field","meta","validationSchema","object","username","string","required","min","email","password"],"mappings":";;;;AAAA,SAAsCA,QAAtC,EAAgDC,YAAhD,QAAoE,QAApE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAGA,OAAO,IAAMC,WAAgD,GAAG,SAAnDA,WAAmD,OAI1D;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,KACC;;AAAA,kBACkBT,QAAQ,CAACS,KAAD,CAD1B;AAAA;AAAA,MACGC,KADH;AAAA,MACUC,IADV;;AAGJ,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH;AAAlB,KAA8BE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD,eAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD,CAfM;AAiBP,OAAO,IAAME,gBAAgB,GAAGP,GAAG,CAACQ,MAAJ,CAAW;AACzCC,EAAAA,QAAQ,EAAET,GAAG,CAACU,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,CAD+B;AAEzCC,EAAAA,KAAK,EAAEb,GAAG,CAACU,MAAJ,GAAaC,QAAb,GAAwBE,KAAxB,EAFkC;AAGzCC,EAAAA,QAAQ,EAAEd,GAAG,CAACU,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B;AAH+B,CAAX,CAAzB","sourcesContent":["import { FieldProps, FieldAttributes, useField, ErrorMessage } from \"formik\";\nimport React from \"react\";\nimport { TextInput, HelperText } from \"react-native-paper\";\n\nimport * as yup from \"yup\";\nimport { View } from \"react-native\";\n\nexport const MyTextField: React.FC<FieldAttributes<{}> & any> = ({\n  errName,\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  //   const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <View>\n      <TextInput label={label} {...(field as any)} />\n      <HelperText>\n        <ErrorMessage {...(field as any)} />\n      </HelperText>\n    </View>\n  );\n};\n\nexport const validationSchema = yup.object({\n  username: yup.string().required().min(5),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(5),\n});\n"]},"metadata":{},"sourceType":"module"}