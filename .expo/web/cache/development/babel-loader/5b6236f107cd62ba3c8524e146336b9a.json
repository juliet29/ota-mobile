{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport React from \"react\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport { AuthProvider } from \"./AuthProvider\";\nimport { Routes } from \"./Routes\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 10\n});\n\nvar host = \"http://localhost:4000/graphql\";\nexport var client = new ApolloClient({\n  link: new HttpLink({\n    uri: host,\n    credentials: \"same-origin\"\n  }),\n  cache: new InMemoryCache()\n});\nexport var Providers = function Providers(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/index.tsx"],"names":["ApolloProvider","InMemoryCache","ApolloClient","HttpLink","React","DefaultTheme","Provider","PaperProvider","AuthProvider","Routes","theme","roundness","host","client","link","uri","credentials","cache","Providers"],"mappings":";;;;;;;;AAAA,SAASA,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,QAAQ,IAAIC,aAAnC,QAAwD,oBAAxD;AACA,SAASC,YAAT;AACA,SAASC,MAAT;;AAGA,IAAMC,KAAK,mCACNL,YADM;AAETM,EAAAA,SAAS,EAAE;AAFF,EAAX;;AAUA,IAAMC,IAAI,GAAG,+BAAb;AAEA,OAAO,IAAMC,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AACrCY,EAAAA,IAAI,EAAE,IAAIX,QAAJ,CAAa;AACjBY,IAAAA,GAAG,EAAEH,IADY;AAEjBI,IAAAA,WAAW,EAAE;AAFI,GAAb,CAD+B;AAKrCC,EAAAA,KAAK,EAAE,IAAIhB,aAAJ;AAL8B,CAAjB,CAAf;AAQP,OAAO,IAAMiB,SAAmC,GAAG,SAAtCA,SAAsC,OAAQ;AAAA;;AACzD,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD,CAVM","sourcesContent":["import { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport React from \"react\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport { AuthProvider } from \"./AuthProvider\";\nimport { Routes } from \"./Routes\";\ninterface ProvidersProps {}\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 10,\n  // colors: {\n  //   ...DefaultTheme.colors,\n  //   primary: \"#3498db\",\n  //   accent: \"#f1c40f\",\n  // },\n};\n\nconst host = \"http://localhost:4000/graphql\";\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: host,\n    credentials: \"same-origin\",\n  }),\n  cache: new InMemoryCache(),\n});\n\nexport const Providers: React.FC<ProvidersProps> = ({}) => {\n  return (\n    <ApolloProvider client={client}>\n      <PaperProvider theme={theme}>\n        <AuthProvider>\n          <Routes />\n        </AuthProvider>\n      </PaperProvider>\n    </ApolloProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}