{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/InputField.tsx\";\nimport { useField } from \"formik\";\nimport React from \"react\";\nimport { TextInput } from \"react-native-paper\";\nimport * as yup from \"yup\";\nexport var InputField = function InputField(_ref) {\n  var field = _ref.field,\n      props = _objectWithoutProperties(_ref, [\"field\"]);\n\n  return React.createElement(TextInput, _extends({}, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }));\n};\nexport var MyTextField = function MyTextField(_ref2) {\n  var placeholder = _ref2.placeholder,\n      props = _objectWithoutProperties(_ref2, [\"placeholder\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var errorText = meta.error && meta.touched ? meta.error : \"\";\n  return React.createElement(TextInput, _extends({\n    placeholder: placeholder,\n    helperText: errorText,\n    error: !!errorText\n  }, field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }));\n};\nexport var validationSchema = yup.object({\n  firstName: yup.string().required().max(10),\n  pets: yup.array().of(yup.object({\n    name: yup.string().required()\n  }))\n});","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/InputField.tsx"],"names":["useField","React","TextInput","yup","InputField","field","props","MyTextField","placeholder","meta","errorText","error","touched","validationSchema","object","firstName","string","required","max","pets","array","of","name"],"mappings":";;;;AAAA,SAAsCA,QAAtC,QAAsD,QAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAQA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAqC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAAxBC,KAAwB;;AAC7D,SAAO,oBAAC,SAAD,eAAeD,KAAf,EAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFM;AAIP,OAAO,IAAMC,WAA0C,GAAG,SAA7CA,WAA6C,QAGpD;AAAA,MAFJC,WAEI,SAFJA,WAEI;AAAA,MADDF,KACC;;AAAA,kBACkBN,QAAQ,CAACM,KAAD,CAD1B;AAAA;AAAA,MACGD,KADH;AAAA,MACUI,IADV;;AAEJ,MAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6BH,IAAI,CAACE,KAAlC,GAA0C,EAA5D;AACA,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEH,WADf;AAEE,IAAA,UAAU,EAAEE,SAFd;AAGE,IAAA,KAAK,EAAE,CAAC,CAACA;AAHX,KAIOL,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAdM;AAgBP,OAAO,IAAMQ,gBAAgB,GAAGV,GAAG,CAACW,MAAJ,CAAW;AACzCC,EAAAA,SAAS,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,EAA5B,CAD8B;AAEzCC,EAAAA,IAAI,EAAEhB,GAAG,CAACiB,KAAJ,GAAYC,EAAZ,CACJlB,GAAG,CAACW,MAAJ,CAAW;AACTQ,IAAAA,IAAI,EAAEnB,GAAG,CAACa,MAAJ,GAAaC,QAAb;AADG,GAAX,CADI;AAFmC,CAAX,CAAzB","sourcesContent":["import { FieldProps, FieldAttributes, useField } from \"formik\";\nimport React from \"react\";\nimport { TextInput } from \"react-native-paper\";\n\nimport * as yup from \"yup\";\n\ninterface InputFieldProps {}\n\n// export const InputField: React.FC<InputFieldProps> = ({}) => {\n//         return ();\n// }\n\nexport const InputField = ({ field, ...props }: FieldProps) => {\n  return <TextInput {...field} {...props} />;\n};\n\nexport const MyTextField: React.FC<FieldAttributes<{}>> = ({\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextInput\n      placeholder={placeholder}\n      helperText={errorText}\n      error={!!errorText}\n      {...(field as any)}\n    />\n  );\n};\n\nexport const validationSchema = yup.object({\n  firstName: yup.string().required().max(10),\n  pets: yup.array().of(\n    yup.object({\n      name: yup.string().required(),\n    })\n  ),\n});\n"]},"metadata":{},"sourceType":"module"}