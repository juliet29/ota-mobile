{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/LoginView.tsx\";\nimport { Formik } from \"formik\";\nimport React, { useContext } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { AuthContext } from \"../utils/AuthProvider\";\nimport { MyTextField } from \"../functional-components/MyTextField\";\nimport { LineBreak, StyledColumnView, Wrapper } from \"../styled-components/ReusedUI\";\nimport { LoginValidationSchema } from \"../utils/FormValidationSchemas\";\nimport { useLoginMutation } from \"../generated-components/apolloComponents\";\nimport FacebookAuthButton from \"../functional-components/FacebookAuthButton\";\nexport var LoginView = function LoginView(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n      loginUser = _useLoginMutation2[0],\n      _useLoginMutation2$ = _useLoginMutation2[1],\n      loading = _useLoginMutation2$.loading,\n      error = _useLoginMutation2$.error;\n\n  function submitLoginUser(_ref2) {\n    var email, password, response;\n    return _regeneratorRuntime.async(function submitLoginUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(loginUser({\n              variables: {\n                email: email,\n                password: password\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n            console.log(\"done\");\n            login();\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      password: \"\",\n      email: \"\"\n    },\n    onSubmit: function onSubmit(_ref3) {\n      var email = _ref3.email,\n          password = _ref3.password;\n      submitLoginUser({\n        email: email,\n        password: password\n      });\n    },\n    validationSchema: LoginValidationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var handleSubmit = _ref4.handleSubmit;\n    return React.createElement(StyledColumnView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(MyTextField, {\n      label: \"Email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), React.createElement(MyTextField, {\n      label: \"Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), React.createElement(LineBreak, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      mode: \"contained\",\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"SIGN IN\"));\n  }), React.createElement(FacebookAuthButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"text\",\n    onPress: function onPress() {\n      navigation.navigate(\"Register\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Don't have an account? Start now!\"));\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/LoginView.tsx"],"names":["Formik","React","useContext","Button","AuthContext","MyTextField","LineBreak","StyledColumnView","Wrapper","LoginValidationSchema","useLoginMutation","FacebookAuthButton","LoginView","navigation","login","loginUser","loading","error","submitLoginUser","email","password","variables","response","console","log","handleSubmit","navigate"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\nimport React, { useContext } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { AuthContext } from \"../utils/AuthProvider\";\nimport { MyTextField } from \"../functional-components/MyTextField\";\nimport { AuthNavProps } from \"../navigation/auth/AuthParamList\";\nimport {\n  LineBreak,\n  StyledColumnView,\n  Wrapper,\n} from \"../styled-components/ReusedUI\";\nimport { LoginValidationSchema } from \"../utils/FormValidationSchemas\";\nimport { useLoginMutation } from \"../generated-components/apolloComponents\";\nimport FacebookAuthButton from \"../functional-components/FacebookAuthButton\";\nimport SpotifyAuthButton from \"../functional-components/SpotifyAuthButton\";\n\ninterface LoginViewProps {}\ninterface submitLoginUserProps {\n  email: string;\n  password: string;\n}\n\nexport const LoginView: React.FC<AuthNavProps<\"Login\">> = ({ navigation }) => {\n  // coming from global state management\n  const { login } = useContext(AuthContext);\n  const [loginUser, { loading, error }] = useLoginMutation();\n\n  async function submitLoginUser({ email, password }: submitLoginUserProps) {\n    try {\n      const response = await loginUser({ variables: { email, password } });\n      // TODO: throw user not found error on backend\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n    console.log(\"done\");\n    login();\n  }\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{ password: \"\", email: \"\" }}\n        onSubmit={({ email, password }) => {\n          submitLoginUser({ email, password });\n        }}\n        validationSchema={LoginValidationSchema}>\n        {({ handleSubmit }) => (\n          <StyledColumnView>\n            <MyTextField label=\"Email\" name=\"email\" />\n            <MyTextField label=\"Password\" name=\"password\" />\n            <LineBreak />\n            <Button mode=\"contained\" onPress={handleSubmit}>\n              SIGN IN\n            </Button>\n          </StyledColumnView>\n        )}\n      </Formik>\n\n      <FacebookAuthButton />\n      {/* <SpotifyAuthButton /> */}\n\n      <Button\n        mode=\"text\"\n        onPress={() => {\n          navigation.navigate(\"Register\");\n        }}>\n        Don't have an account? Start now!\n      </Button>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}