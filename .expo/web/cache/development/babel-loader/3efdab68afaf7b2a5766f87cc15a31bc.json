{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/CreatePostView.tsx\";\nimport React from \"react\";\nimport { Wrapper, StyledColumnView } from \"../styled-components/ReusedUI\";\nimport { Formik } from \"formik\";\nimport { MyTextField } from \"../functional-components/MyTextField\";\nimport { Button } from \"react-native-paper\";\nimport { CreatePostValidationSchema } from \"../utils/FormValidationSchemas\";\nimport { useCreatePostMutation } from \"../generated/apolloComponents\";\nexport var CreatePostView = function CreatePostView(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useCreatePostMutatio = useCreatePostMutation(),\n      _useCreatePostMutatio2 = _slicedToArray(_useCreatePostMutatio, 2),\n      createPost = _useCreatePostMutatio2[0],\n      _useCreatePostMutatio3 = _useCreatePostMutatio2[1],\n      loading = _useCreatePostMutatio3.loading,\n      error = _useCreatePostMutatio3.error;\n\n  function submitCreatePost(_ref2) {\n    var text, link, response;\n    return _regeneratorRuntime.async(function submitCreatePost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            text = _ref2.text, link = _ref2.link;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createPost({\n              variables: {\n                text: text,\n                link: link\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log({\n              text: text,\n              link: link\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      text: \"\",\n      link: \"\"\n    },\n    onSubmit: function onSubmit(_ref3) {\n      var text = _ref3.text,\n          link = _ref3.link;\n      submitCreatePost({\n        text: text,\n        link: link\n      });\n    },\n    validationSchema: CreatePostValidationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var handleSubmit = _ref4.handleSubmit;\n    return React.createElement(StyledColumnView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, React.createElement(MyTextField, {\n      label: \"text\",\n      name: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), React.createElement(MyTextField, {\n      label: \"link\",\n      name: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      mode: \"contained\",\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"CREATE POST\"));\n  }));\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/CreatePostView.tsx"],"names":["React","Wrapper","StyledColumnView","Formik","MyTextField","Button","CreatePostValidationSchema","useCreatePostMutation","CreatePostView","createPost","loading","error","submitCreatePost","text","link","variables","response","console","log","handleSubmit"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,gBAAlB;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,0BAAT;AACA,SAASC,qBAAT;AAIA,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAAgD,OAAQ;AAAA;;AAAA,8BAC1BD,qBAAqB,EADK;AAAA;AAAA,MAC5DE,UAD4D;AAAA;AAAA,MAC9CC,OAD8C,0BAC9CA,OAD8C;AAAA,MACrCC,KADqC,0BACrCA,KADqC;;AAEnE,WAAeC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkCC,YAAAA,IAAlC,SAAkCA,IAAlC,EAAwCC,IAAxC,SAAwCA,IAAxC;AAAA;AAAA,6CACyBL,UAAU,CAAC;AAAEM,cAAAA,SAAS,EAAE;AAAEF,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,IAAI,EAAJA;AAAR;AAAb,aAAD,CADnC;;AAAA;AACQE,YAAAA,QADR;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,IAAI,EAAJA;AAAR,aAAZ;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAED,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KADjB;AAEE,IAAA,QAAQ,EAAE,yBAAoB;AAAA,UAAjBD,IAAiB,SAAjBA,IAAiB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAC5BF,MAAAA,gBAAgB,CAAC;AAAEC,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,IAAI,EAAJA;AAAR,OAAD,CAAhB;AACD,KAJH;AAKE,IAAA,gBAAgB,EAAER,0BALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG;AAAA,QAAGa,YAAH,SAAGA,YAAH;AAAA,WACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAEA,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADD;AAAA,GANH,CADF,CADF;AAoBD,CA1BM","sourcesContent":["import React from \"react\";\nimport { Wrapper, StyledColumnView } from \"../styled-components/ReusedUI\";\nimport { Text } from \"react-native\";\nimport { Formik } from \"formik\";\nimport { MyTextField } from \"../functional-components/MyTextField\";\nimport { Button } from \"react-native-paper\";\nimport { CreatePostValidationSchema } from \"../utils/FormValidationSchemas\";\nimport { useCreatePostMutation } from \"../generated/apolloComponents\";\n\ninterface CreatePostViewProps {}\n\nexport const CreatePostView: React.FC<CreatePostViewProps> = ({}) => {\n  const [createPost, { loading, error }] = useCreatePostMutation();\n  async function submitCreatePost({ text, link }: any) {\n    const response = await createPost({ variables: { text, link } });\n    console.log({ text, link });\n  }\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{ text: \"\", link: \"\" }}\n        onSubmit={({ text, link }) => {\n          submitCreatePost({ text, link });\n        }}\n        validationSchema={CreatePostValidationSchema}>\n        {({ handleSubmit }) => (\n          <StyledColumnView>\n            <MyTextField label=\"text\" name=\"text\" />\n            <MyTextField label=\"link\" name=\"link\" />\n            <Button mode=\"contained\" onPress={handleSubmit}>\n              CREATE POST\n            </Button>\n          </StyledColumnView>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}