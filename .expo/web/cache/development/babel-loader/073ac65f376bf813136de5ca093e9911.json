{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/utils/FacebookAuth.tsx\";\nimport * as React from \"react\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { makeRedirectUri, useAuthRequest } from \"expo-auth-session\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: \"https://www.facebook.com/v6.0/dialog/oauth\",\n  tokenEndpoint: \"https://graph.facebook.com/v6.0/oauth/access_token\"\n};\nvar useProxy = Platform.select({\n  web: false,\n  default: true\n});\nexport default function FacebookAuth() {\n  var _useAuthRequest = useAuthRequest({\n    clientId: \"<1647259942119049>\",\n    scopes: [\"public_profile\", \"email\", \"user_likes\"],\n    redirectUri: makeRedirectUri({\n      useProxy: useProxy,\n      native: \"fb111111111111://authorize\"\n    }),\n    extraParams: {\n      display: Platform.select({\n        web: \"popup\"\n      }),\n      auth_type: \"rerequest\"\n    }\n  }, discovery),\n      _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n      request = _useAuthRequest2[0],\n      response = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === \"success\") {\n      var code = response.params.code;\n    }\n  }, [response]);\n  return React.createElement(Button, {\n    disabled: !request,\n    title: \"Login\",\n    onPress: function onPress() {\n      promptAsync({\n        useProxy: useProxy,\n        windowFeatures: {\n          width: 700,\n          height: 600\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/utils/FacebookAuth.tsx"],"names":["React","WebBrowser","makeRedirectUri","useAuthRequest","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","useProxy","Platform","select","web","default","FacebookAuth","clientId","scopes","redirectUri","native","extraParams","display","auth_type","request","response","promptAsync","useEffect","type","code","params","windowFeatures","width","height"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,mBAAhD;;;AAGAF,UAAU,CAACG,wBAAX;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,qBAAqB,EAAE,4CADP;AAEhBC,EAAAA,aAAa,EAAE;AAFC,CAAlB;AAKA,IAAMC,QAAQ,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAAEC,EAAAA,GAAG,EAAE,KAAP;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAAhB,CAAjB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA,wBACIV,cAAc,CACrD;AACEW,IAAAA,QAAQ,EAAE,oBADZ;AAEEC,IAAAA,MAAM,EAAE,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,YAA5B,CAFV;AAIEC,IAAAA,WAAW,EAAEd,eAAe,CAAC;AAC3BM,MAAAA,QAAQ,EAARA,QAD2B;AAI3BS,MAAAA,MAAM,EAAE;AAJmB,KAAD,CAJ9B;AAUEC,IAAAA,WAAW,EAAE;AAEXC,MAAAA,OAAO,EAAEV,QAAQ,CAACC,MAAT,CAAgB;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAAhB,CAFE;AAIXS,MAAAA,SAAS,EAAE;AAJA;AAVf,GADqD,EAkBrDf,SAlBqD,CADlB;AAAA;AAAA,MAC9BgB,OAD8B;AAAA,MACrBC,QADqB;AAAA,MACXC,WADW;;AAsBrCvB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,YAAM;AACpB,QAAI,CAAAF,QAAQ,QAAR,YAAAA,QAAQ,CAAEG,IAAV,MAAmB,SAAvB,EAAkC;AAAA,UACxBC,IADwB,GACfJ,QAAQ,CAACK,MADM,CACxBD,IADwB;AAEjC;AACF,GAJD,EAIG,CAACJ,QAAD,CAJH;AAMA,SACE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAACD,OADb;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbE,MAAAA,WAAW,CAAC;AACVf,QAAAA,QAAQ,EAARA,QADU;AAEVoB,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB;AAFN,OAAD,CAAX;AAID,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD","sourcesContent":["import * as React from \"react\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { makeRedirectUri, useAuthRequest } from \"expo-auth-session\";\nimport { Button, Platform } from \"react-native\";\n\nWebBrowser.maybeCompleteAuthSession();\n\n// Endpoint\nconst discovery = {\n  authorizationEndpoint: \"https://www.facebook.com/v6.0/dialog/oauth\",\n  tokenEndpoint: \"https://graph.facebook.com/v6.0/oauth/access_token\",\n};\n\nconst useProxy = Platform.select({ web: false, default: true });\n\nexport default function FacebookAuth() {\n  const [request, response, promptAsync] = useAuthRequest(\n    {\n      clientId: \"<1647259942119049>\",\n      scopes: [\"public_profile\", \"email\", \"user_likes\"],\n      // For usage in managed apps using the proxy\n      redirectUri: makeRedirectUri({\n        useProxy,\n        // For usage in bare and standalone\n        // Use your FBID here. The path MUST be `authorize`.\n        native: \"fb111111111111://authorize\",\n      }),\n      extraParams: {\n        // Use `popup` on web for a better experience\n        display: Platform.select({ web: \"popup\" }) as any,\n        // Optionally you can use this to rerequest declined permissions\n        auth_type: \"rerequest\",\n      },\n    },\n    discovery\n  );\n\n  React.useEffect(() => {\n    if (response?.type === \"success\") {\n      const { code } = response.params;\n    }\n  }, [response]);\n\n  return (\n    <Button\n      disabled={!request}\n      title=\"Login\"\n      onPress={() => {\n        promptAsync({\n          useProxy,\n          windowFeatures: { width: 700, height: 600 },\n        });\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}