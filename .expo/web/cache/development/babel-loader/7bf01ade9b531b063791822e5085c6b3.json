{"ast":null,"code":"var _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/LoginView.tsx\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport { AuthContext } from \"../AuthProvider\";\nimport { LineBreak, StyledColumnView, Wrapper } from \"../global-ui/ReusedUI\";\nimport { useForm } from \"react-hook-form\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport var LoginView = function LoginView(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(\"Form Data\", JSON.stringify(data));\n    login();\n  };\n\n  useEffect(function () {\n    register({\n      name: \"Email\"\n    }, {\n      required: true\n    });\n    register({\n      name: \"Password\"\n    }, {\n      required: true\n    });\n  }, [register]);\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledColumnView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email\",\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setValue(\"Email\", text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), errors.Email && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }\n  }, \"Email is required\"), React.createElement(TextInput, {\n    label: \"Password\",\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setValue(\"Password\", text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), errors.Password && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Password is required\"), React.createElement(LineBreak, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"SIGN IN\")), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      console.log(\"Facebook button press\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Continue with Facebook\"), React.createElement(Button, {\n    mode: \"text\",\n    onPress: function onPress() {\n      navigation.navigate(\"Register\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Don't have an account? Start now!\"));\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/LoginView.tsx"],"names":["React","useContext","useEffect","Button","TextInput","AuthContext","LineBreak","StyledColumnView","Wrapper","useForm","LoginView","navigation","login","register","setValue","handleSubmit","errors","onSubmit","data","console","log","JSON","stringify","name","required","text","Email","Password","navigate"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport { AuthContext } from \"../AuthProvider\";\nimport { LineBreak, StyledColumnView, Wrapper } from \"../global-ui/ReusedUI\";\nimport { AuthNavProps } from \"../navigation/auth/AuthParamList\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport {\n  View,\n  Alert,\n  Text,\n  Button as Button2,\n  TextInput as TextInput2,\n} from \"react-native\";\nimport { seedValue } from \"faker\";\n\ninterface LoginViewProps {}\n\nexport const LoginView: React.FC<AuthNavProps<\"Login\">> = ({ navigation }) => {\n  // coming from global state management\n  const { login } = useContext(AuthContext);\n  // react hook form\n  const { register, setValue, handleSubmit, errors } = useForm();\n  // TODO: fix type\n  const onSubmit = (data: any) => {\n    console.log(\"Form Data\", JSON.stringify(data));\n    login();\n  };\n\n  useEffect(() => {\n    register({ name: \"Email\" }, { required: true });\n    register({ name: \"Password\" }, { required: true });\n  }, [register]);\n\n  return (\n    <Wrapper>\n      <StyledColumnView>\n        <TextInput\n          label=\"Email\"\n          mode=\"outlined\"\n          onChangeText={(text) => setValue(\"Email\", text)}\n        />\n        {errors.Email && <Text>Email is required</Text>}\n        <TextInput\n          label=\"Password\"\n          mode=\"outlined\"\n          onChangeText={(text) => setValue(\"Password\", text)}\n        />\n        {errors.Password && <Text>Password is required</Text>}\n        <LineBreak />\n        <Button mode=\"contained\" onPress={handleSubmit(onSubmit)}>\n          SIGN IN\n        </Button>\n      </StyledColumnView>\n\n      <Button\n        mode=\"outlined\"\n        onPress={() => {\n          console.log(\"Facebook button press\");\n        }}>\n        Continue with Facebook\n      </Button>\n\n      <Button\n        mode=\"text\"\n        onPress={() => {\n          navigation.navigate(\"Register\");\n        }}>\n        Don't have an account? Start now!\n      </Button>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}