{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/RegisterView.tsx\";\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { useRegisterMutation } from \"../generated/apolloComponents\";\nimport { Wrapper } from \"../global-ui/ReusedUI\";\nimport { validationSchema, MyTextField } from \"./InputField\";\nexport var RegisterView = function RegisterView(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      registerUser = _useRegisterMutation2[0],\n      _useRegisterMutation3 = _useRegisterMutation2[1],\n      loading = _useRegisterMutation3.loading,\n      error = _useRegisterMutation3.error;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n\n  function submitRegisterUser(formData) {\n    var response;\n    return _regeneratorRuntime.async(function submitRegisterUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(registerUser({\n              variables: {\n                data: {\n                  email: formData.email,\n                  username: \"xcfvgbhjnkmfghjk\",\n                  password: \"dfghjklcvbnm,\"\n                }\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      return submitRegisterUser(values);\n    },\n    validationSchema: validationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(MyTextField, {\n      label: \"Username\",\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), React.createElement(MyTextField, {\n      label: \"Email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), React.createElement(MyTextField, {\n      label: \"Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), React.createElement(Button, {\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Submit\"));\n  });\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/RegisterView.tsx"],"names":["Formik","React","Button","useRegisterMutation","Wrapper","validationSchema","MyTextField","RegisterView","navigation","route","registerUser","loading","error","submitRegisterUser","formData","variables","data","email","username","password","response","console","log","firstName","values","handleSubmit"],"mappings":";;;AAAA,SAAuBA,MAAvB,QAA4C,QAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAA8C,oBAA9C;AACA,SAASC,mBAAT;AACA,SAAsCC,OAAtC;AAEA,SAAqBC,gBAArB,EAAuCC,WAAvC;AAIA,OAAO,IAAMC,YAAgD,GAAG,SAAnDA,YAAmD,OAG1D;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,KACI,QADJA,KACI;;AAAA,6BAEuCN,mBAAmB,EAF1D;AAAA;AAAA,MAEGO,YAFH;AAAA;AAAA,MAEmBC,OAFnB,yBAEmBA,OAFnB;AAAA,MAE4BC,KAF5B,yBAE4BA,KAF5B;;AAGJ,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAEX,WAAeC,kBAAf,CAAkCC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE2BJ,YAAY,CAAC;AAClCK,cAAAA,SAAS,EAAE;AACTC,gBAAAA,IAAI,EAAE;AAGJC,kBAAAA,KAAK,EAAEH,QAAQ,CAACG,KAHZ;AAIJC,kBAAAA,QAAQ,EAAE,kBAJN;AAKJC,kBAAAA,QAAQ,EAAE;AALN;AADG;AADuB,aAAD,CAFvC;;AAAA;AAEUC,YAAAA,QAFV;AAaIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAbJ;AAAA;;AAAA;AAAA;AAAA;AAgBIC,YAAAA,OAAO,CAACC,GAAR;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aAAYX,kBAAkB,CAACW,MAAD,CAA9B;AAAA,KAFZ;AAGE,IAAA,gBAAgB,EAAEnB,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG;AAAA,QAAGoB,YAAH,SAAGA,YAAH;AAAA,WACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,UAAnB;AAA8B,MAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,OAAnB;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,UAAnB;AAA8B,MAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADD;AAAA,GAJH,CADF;AAgBD,CA7CM","sourcesContent":["import { ErrorMessage, Formik, Field } from \"formik\";\nimport React from \"react\";\nimport { Button, TextInput, HelperText } from \"react-native-paper\";\nimport { useRegisterMutation } from \"../generated/apolloComponents\";\nimport { LineBreak, StyledColumnView, Wrapper } from \"../global-ui/ReusedUI\";\nimport { AuthNavProps } from \"../navigation/auth/AuthParamList\";\nimport { InputField, validationSchema, MyTextField } from \"./InputField\";\n\ninterface RegisterViewProps {}\n\nexport const RegisterView: React.FC<AuthNavProps<\"Register\">> = ({\n  navigation,\n  route,\n}) => {\n  // register mutation\n  const [registerUser, { loading, error }] = useRegisterMutation();\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  async function submitRegisterUser(formData: any) {\n    try {\n      const response = await registerUser({\n        variables: {\n          data: {\n            // username: formData.username,\n            // password: formData.password,\n            email: formData.email,\n            username: \"xcfvgbhjnkmfghjk\",\n            password: \"dfghjklcvbnm,\",\n          },\n        },\n      });\n      console.log(response);\n    } catch (err) {\n      // TODO  handle sever errors at top level\n      console.log(err);\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={{ firstName: \"\" }}\n      onSubmit={(values) => submitRegisterUser(values)}\n      validationSchema={validationSchema}>\n      {({ handleSubmit }) => (\n        <Wrapper>\n          <MyTextField label=\"Username\" name=\"username\" />\n          <MyTextField label=\"Email\" name=\"email\" />\n          <MyTextField label=\"Password\" name=\"password\" />\n\n          <Button onPress={handleSubmit as any}>Submit</Button>\n        </Wrapper>\n      )}\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}