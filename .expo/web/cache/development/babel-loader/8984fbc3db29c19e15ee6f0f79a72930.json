{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/navigation/app/home/HomeStack.tsx\";\nimport React, { useContext } from \"react\";\nimport { Center } from \"../../../global-ui/Center\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport faker from \"faker\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { AuthContext } from \"../../../AuthProvider\";\nvar Stack = createStackNavigator();\n\nfunction Feed(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      width: \"100%\"\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Button, {\n        title: item,\n        onPress: function onPress() {\n          navigation.navigate(\"Post\", {\n            name: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(product, idx) {\n      return product + idx;\n    },\n    data: Array.from(Array(50), function () {\n      return faker.commerce.product();\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport var HomeStack = function HomeStack(_ref3) {\n  _objectDestructuringEmpty(_ref3);\n\n  var _useContext = useContext(AuthContext),\n      logout = _useContext.logout;\n\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Feed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Feed\",\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            logout();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        }, \"Logout\"));\n      }\n    },\n    component: Feed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/navigation/app/home/HomeStack.tsx"],"names":["React","useContext","Center","faker","createStackNavigator","TouchableOpacity","AuthContext","Stack","Feed","navigation","width","item","navigate","name","product","idx","Array","from","commerce","HomeStack","logout","headerRight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,WAAT;AAIA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;AAEA,SAASI,IAAT,OAAyD;AAAA,MAAzCC,UAAyC,QAAzCA,UAAyC;AACvD,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACxB,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEA,IADT;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbF,UAAAA,UAAU,CAACG,QAAX,CAAoB,MAApB,EAA4B;AAC1BC,YAAAA,IAAI,EAAEF;AADoB,WAA5B;AAGD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAbH;AAeE,IAAA,YAAY,EAAE,sBAACG,OAAD,EAAUC,GAAV;AAAA,aAAkBD,OAAO,GAAGC,GAA5B;AAAA,KAfhB;AAgBE,IAAA,IAAI,EAAEC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAhB,EAAsB;AAAA,aAAMb,KAAK,CAACe,QAAN,CAAeJ,OAAf,EAAN;AAAA,KAAtB,CAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAsBD;;AAED,OAAO,IAAMK,SAAmC,GAAG,SAAtCA,SAAsC,QAAQ;AAAA;;AAAA,oBACtClB,UAAU,CAACK,WAAD,CAD4B;AAAA,MACjDc,MADiD,eACjDA,MADiD;;AAEzD,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,uBAAM;AACjB,eACE,oBAAC,gBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbD,YAAAA,MAAM;AACP,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF;AAQD;AAVM,KAFX;AAcE,IAAA,SAAS,EAAEZ,IAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAqBD,CAvBM","sourcesContent":["import React, { useContext } from \"react\";\nimport { Center } from \"../../../global-ui/Center\";\nimport { Text, Button, FlatList } from \"react-native\";\nimport faker from \"faker\";\nimport { HomeStackNavProps, HomeParamList } from \"./HomeParamList\";\nimport { StackActions } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { AuthContext } from \"../../../AuthProvider\";\n\ninterface HomeStackProps {}\n\nconst Stack = createStackNavigator<HomeParamList>();\n\nfunction Feed({ navigation }: HomeStackNavProps<\"Feed\">) {\n  return (\n    <Center>\n      <FlatList\n        style={{ width: \"100%\" }}\n        renderItem={({ item }) => {\n          return (\n            <Button\n              title={item}\n              onPress={() => {\n                navigation.navigate(\"Post\", {\n                  name: item,\n                });\n              }}\n            />\n          );\n        }}\n        //   TODO: figue out the issue with the key exractor\n        keyExtractor={(product, idx) => product + idx}\n        data={Array.from(Array(50), () => faker.commerce.product())}\n      />\n    </Center>\n  );\n}\n\nexport const HomeStack: React.FC<HomeStackProps> = ({}) => {\n  const { logout } = useContext(AuthContext);\n  return (\n    <Stack.Navigator initialRouteName=\"Feed\">\n      {/* {addProductRoutes(Stack)} */}\n      <Stack.Screen\n        name=\"Feed\"\n        options={{\n          headerRight: () => {\n            return (\n              <TouchableOpacity\n                onPress={() => {\n                  logout();\n                }}>\n                <Text>Logout</Text>\n              </TouchableOpacity>\n            );\n          },\n        }}\n        component={Feed}\n      />\n    </Stack.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}