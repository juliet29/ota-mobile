{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/InputField.tsx\";\nimport React from \"react\";\nimport { TextInput, HelperText } from \"react-native-paper\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInputRN from \"react-native-web/dist/exports/TextInput\";\nimport { useField } from \"Formik\";\nexport var InputField = function InputField(_ref) {\n  var meta = _ref.meta,\n      field = _ref.field,\n      props = _objectWithoutProperties(_ref, [\"meta\", \"field\"]);\n\n  var errorText = meta.error && meta.touched ? meta.error : \"\";\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, _extends({}, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  })), React.createElement(HelperText, {\n    type: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\nexport var MyTextField = function MyTextField(_ref2) {\n  var placeholder = _ref2.placeholder,\n      props = _objectWithoutProperties(_ref2, [\"placeholder\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var errorText = meta.error && meta.touched ? meta.error : \"\";\n  return React.createElement(TextInputRN, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/julietnu/Desktop/onTheAux/ota-mobile-v1/src/modules/InputField.tsx"],"names":["React","TextInput","HelperText","useField","InputField","meta","field","props","errorText","error","touched","MyTextField","placeholder"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;;;AAEA,SAASC,QAAT,QAA0C,QAA1C;AAQA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA2C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAAxBC,KAAwB;;AACnE,MAAMC,SAAS,GAAGH,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACK,OAAnB,GAA6BL,IAAI,CAACI,KAAlC,GAA0C,EAA5D;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,eAAeH,KAAf,EAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAUD,CAZM;AAcP,OAAO,IAAMI,WAA0C,GAAG,SAA7CA,WAA6C,QAGpD;AAAA,MAFJC,WAEI,SAFJA,WAEI;AAAA,MADDL,KACC;;AAAA,kBACkBJ,QAAQ,CAACI,KAAD,CAD1B;AAAA;AAAA,MACGD,KADH;AAAA,MACUD,IADV;;AAEJ,MAAMG,SAAS,GAAGH,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACK,OAAnB,GAA6BL,IAAI,CAACI,KAAlC,GAA0C,EAA5D;AACA,SAAO,oBAAC,WAAD,eAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAPM","sourcesContent":["import React from \"react\";\nimport { FieldProps } from \"formik\";\nimport { TextInput, HelperText } from \"react-native-paper\";\nimport { View, Text, TextInput as TextInputRN } from \"react-native\";\nimport { useField, FieldAttributes } from \"Formik\";\n\ninterface InputFieldProps {}\n\n// export const InputField: React.FC<InputFieldProps> = ({}) => {\n//         return ();\n// }\n\nexport const InputField = ({ meta, field, ...props }: FieldProps) => {\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <View>\n      <TextInput {...field} {...props} />\n\n      <HelperText type=\"error\" />\n    </View>\n\n    //   {/* {errorMessage && <Text style={{ color: \"red\" }}> {errorMessage} </Text>}\n    //   <Text>Here for kikcs</Text> */}\n  );\n};\n\nexport const MyTextField: React.FC<FieldAttributes<{}>> = ({\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return <TextInputRN {...props} />;\n};\n\n// visible={}\n"]},"metadata":{},"sourceType":"module"}